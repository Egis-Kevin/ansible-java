    - set_fact: JDK_URL="{{ lookup('env', 'JDK_URL') }}"
    - set_fact: JVM_ZIPFILE="{{ lookup('env', 'JVM_ZIPFILE') }}"
    - when: jdk_url is defined
      block:
      - set_fact: JDK_URL="{{ jdk_url }}"
    - when: jvm_zipfile is defined
      block:
      - set_fact: JVM_ZIPFILE="{{ jvm_zipfile }}"
    - when: JDK_URL == ""
      block:
      - debug: msg="No JDK url specified"
      - meta: end_play

    - when: JVM_ZIPFILE == ""
      block:
      - set_fact: JVM_ZIP="/tmp/{{JDK_URL | basename}}"

    - when: JVM_ZIPFILE != ""
      block:
      - set_fact: JVM_ZIP="/tmp/{{JVM_ZIPFILE}}"

    - set_fact: jvm_ver="{{installed_jvm_version.stdout | regex_replace('_', 'u') | regex_replace('1.8.0', '8') }}"
    - set_fact: upgrade_needed="{{jvm_ver == '' or not jvm_ver in JVM_ZIP }}"

    - when: upgrade_needed
      block:

      - stat: path="{{JVM_ZIP}}"
        register: jvm_zip_file

      - name: "downloading {{JVM_ZIP}}"
        when: not jvm_zip_file.stat.exists
        get_url:
          url:     "{{ JDK_URL }}"
          headers: 'Cookie:oraclelicense=accept-securebackup-cookie'
          dest:    "{{JVM_ZIP}}"
          validate_certs: "{{validate_certs}}"


      - name: unzip JVM
        shell: rm -rf /tmp/jvm; mkdir /tmp/jvm; tar -zxvf {{JVM_ZIP}} -C /tmp/jvm

      - file: path="{{JVM_PATH}}" state=directory

      - name: install JVM
        shell: rm -rf {{JVM_PATH}}/; mv /tmp/jvm/`ls /tmp/jvm`/ {{JVM_PATH}}/

      - name: link commands
        file:
          src:  "{{item}}"
          force: yes
          dest: "{{INSTALL_PATH}}/bin/{{item | basename}}"
          state: link
        with_fileglob: "{{JVM_PATH}}/bin/*"

    - name: remove installation file
      when: REMOVE_INSTALL_FILES
      file:
          path: "{{JVM_ZIP}}"
          state: absent

    - name: remove installation file
      when: REMOVE_INSTALL_FILES
      file:
          path: "/tmp/jvm"
          state: absent
